<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hero</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initiate

spd = 0.9
time = 0

ctrl_direction[0, 0] = vk_numpad7
ctrl_direction[1, 0] = vk_numpad8
ctrl_direction[2, 0] = vk_numpad9
ctrl_direction[0, 1] = vk_numpad4
ctrl_direction[1, 1] = vk_numpad5
ctrl_direction[2, 1] = vk_numpad6
ctrl_direction[0, 2] = vk_numpad1
ctrl_direction[1, 2] = vk_numpad2
ctrl_direction[2, 2] = vk_numpad3

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Take a turn
if(id = obj_turn.turn){
    var chg_x = 0
    var chg_y = 0
    for(var temp_y = 0; temp_y &lt; 3; temp_y++){
        for(var temp_x = 0; temp_x &lt; 3; temp_x++){
            if(keyboard_check_pressed(ctrl_direction[temp_x, temp_y])){
                chg_x = temp_x - 1
                chg_y = temp_y - 1
            }
        }
    }
    if((chg_x != 0 or chg_y != 0) and 
        !place_meeting(x + (chg_x * sprite_width), y + (chg_y * sprite_height), obj_blocked)){
        x += chg_x * sprite_width
        y += chg_y * sprite_height
        obj_turn.turn = noone
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
